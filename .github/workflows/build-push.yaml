name: build-push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel semver
          pip install -r requirements.txt

      - name: Get latest tag
        id: version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$latest_tag" ]; then
            new_version="0.0.1"
          else
            new_version=$(python -c "import semver; print(semver.bump_patch('$latest_tag'))")
          fi
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/persistence-service:${{ env.new_version }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/persistence-service:${{ env.new_version }} ${{ secrets.DOCKER_USERNAME }}/persistence-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/persistence-service:${{ env.new_version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/persistence-service:latest

      - name: Push new or updated tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          existing_tag=$(git tag --list "${new_version}")
          if [ -z "$existing_tag" ]; then
            echo "Creating new tag: ${new_version}"
            git tag ${new_version}
            git push origin ${new_version}
          else
            echo "Tag ${new_version} already exists. Skipping tag creation."
          fi
